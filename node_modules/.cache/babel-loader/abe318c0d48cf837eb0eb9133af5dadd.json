{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\new\\\\gallery\\\\src\\\\CollectionItemPg.js\";\nimport React from 'react';\nimport './css/CollectionsPage.css';\nimport IndexedDbRepository from './IndexedRepository';\nimport { Link, withRouter } from 'react-router-dom';\nimport { saveAs } from 'file-saver';\n\nclass CollectionItemPg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: []\n    }; // this.search = this.search.bind(this);\n\n    this.saveCollection = this.saveCollection.bind(this);\n\n    this.handleDelete = async idToDelete => {\n      await this.repository.deleteById('photos', idToDelete);\n      this.setState({\n        images: await this.repository.searchByField('photos', 'collections', this.props.match.params.colName)\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.repository = new IndexedDbRepository(\"id\");\n    this.repository.searchByField('photos', 'collections', this.props.match.params.colName).then(images => this.setState({\n      images\n    }));\n  }\n  /*search(e) {\r\n      if(e.target.value == '') {\r\n          this.repository.findAll('photos').then( images => this.setState( { images } ) );\r\n      }\r\n      else {\r\n          this.repository.searchByField('photos', 'name', e.target.value).then(images => this.setState( { images } ) );\r\n      }\r\n    }*/\n\n\n  async saveCollection() {\n    var JSZip = require(\"jszip\");\n\n    var zip = new JSZip();\n    var img = zip.folder(\"images\");\n\n    for (const image of this.state.images) {\n      //var imgData = 'data:image/' + image.mimetype.split('.').pop() + ';base64,' + btoa(image.image);\n      var imgData = image.image;\n      var imgName = image.name + image.mimetype;\n      img.file(imgName, imgData, {\n        base64: true\n      });\n    }\n\n    var archiveName = this.props.match.params.colName + '.zip';\n    zip.generateAsync({\n      type: \"blob\"\n    }).then(function (base64) {\n      // Force down of the Zip file\n      saveAs(base64, archiveName);\n      alert(\"rgds\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"photo-wall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.state.images.map(imgcontent => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        width: \"200px\",\n        height: \"100px\",\n        src: 'data:image/jpeg;base64,' + btoa(imgcontent.image),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        class: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, imgcontent.name), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", imgcontent.description), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \", imgcontent.format), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, \"\\u0414\\u0430\\u0442\\u0430: \", imgcontent.date), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, \"\\u0422\\u0438\\u043F \\u0444\\u0430\\u0439\\u043B\\u0430: \", imgcontent.mimetype), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, \"\\u0412\\u0435\\u0441: \", imgcontent.weight), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\\u044B: \", imgcontent.size), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, \"\\u041A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u044F: \", imgcontent.collection), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: async () => {\n          await this.handleDelete(imgcontent.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn green\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: /edit/ + imgcontent.id,\n        class: \"btnlink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 69\n        }\n      }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"))));\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: async () => await this.saveCollection(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u044E\")));\n  }\n\n}\n\nexport default CollectionItemPg;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/new/gallery/src/CollectionItemPg.js"],"names":["React","IndexedDbRepository","Link","withRouter","saveAs","CollectionItemPg","Component","constructor","props","state","images","saveCollection","bind","handleDelete","idToDelete","repository","deleteById","setState","searchByField","match","params","colName","componentDidMount","then","JSZip","require","zip","img","folder","image","imgData","imgName","name","mimetype","file","base64","archiveName","generateAsync","type","alert","render","map","imgcontent","btoa","description","format","date","weight","size","collection","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/CollectionsPage.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { saveAs } from 'file-saver';\r\n\r\nclass CollectionItemPg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: []\r\n        }\r\n\r\n       // this.search = this.search.bind(this);\r\n        this.saveCollection = this.saveCollection.bind(this);\r\n        this.handleDelete = async( idToDelete ) => {\r\n            await this.repository.deleteById( 'photos', idToDelete );\r\n            this.setState( { images: await this.repository.searchByField('photos', 'collections', this.props.match.params.colName) } );\r\n          };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.repository = new IndexedDbRepository(\"id\");\r\n        this.repository.searchByField('photos', 'collections', this.props.match.params.colName).then( images => this.setState( { images } ) );\r\n        \r\n    }\r\n\r\n    /*search(e) {\r\n        if(e.target.value == '') {\r\n            this.repository.findAll('photos').then( images => this.setState( { images } ) );\r\n        }\r\n        else {\r\n            this.repository.searchByField('photos', 'name', e.target.value).then(images => this.setState( { images } ) );\r\n        }\r\n\r\n    }*/\r\n\r\n    async saveCollection() {\r\n        var JSZip = require(\"jszip\");\r\n        var zip = new JSZip();\r\n        var img = zip.folder(\"images\");\r\n        for(const image of this.state.images) {\r\n            //var imgData = 'data:image/' + image.mimetype.split('.').pop() + ';base64,' + btoa(image.image);\r\n            var imgData = image.image;\r\n            var imgName = image.name + image.mimetype;\r\n            img.file( imgName, imgData, {base64: true});\r\n        }\r\n        var archiveName = this.props.match.params.colName + '.zip';\r\n        zip.generateAsync({type:\"blob\"})\r\n        .then(function(base64) {\r\n            // Force down of the Zip file\r\n            saveAs(base64, archiveName);\r\n            alert(\"rgds\");\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div id=\"photo-wall\">\r\n                    <ul>\r\n                        {this.state.images.map((imgcontent) => {\r\n                    return (\r\n                        <li>\r\n                        <div class=\"post\">\r\n                            <img width = \"200px\" height = \"100px\" src = {'data:image/jpeg;base64,' + btoa(imgcontent.image)}/>\r\n                            <h2 class=\"title\">{imgcontent.name}</h2>\r\n                            <p class=\"description\">Описание: {imgcontent.description}</p>\r\n                            <p class=\"description\">Формат: {imgcontent.format}</p>\r\n                            <p class=\"description\">Дата: {imgcontent.date}</p>\r\n                            <p class=\"description\">Тип файла: {imgcontent.mimetype}</p>\r\n                            <p class=\"description\">Вес: {imgcontent.weight}</p>\r\n                            <p class=\"description\">Размеры: {imgcontent.size}</p>\r\n                            <p class=\"description\">Коллекция: {imgcontent.collection}</p>\r\n                            <button type = \"button\" onClick = {async () => {await this.handleDelete(imgcontent.id)}}>Удалить</button>\r\n                            <button class=\"btn green\" type=\"button\"><Link to={/edit/+ imgcontent.id} class=\"btnlink\" >Редактировать</Link></button>\r\n                        </div>\r\n                        </li>\r\n                    )\r\n                    })}     \r\n                    </ul>\r\n                    <button type = \"button\" onClick = {async () => await this.saveCollection()}>Сохранить коллекцию</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollectionItemPg;"]},"metadata":{},"sourceType":"module"}