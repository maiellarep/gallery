{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\new\\\\gallery\\\\src\\\\AddCollectionPg.js\";\nimport React from 'react';\nimport './css/common.css';\nimport './css/Buttons.css';\nimport IndexedDbRepository from './IndexedRepository';\nimport { Link, withRouter } from 'react-router-dom';\nimport logo from './img/defaultOrganisationLogo.jpg';\n\nclass AddCollectionPg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colName: null,\n      colPreview: null,\n      preview: logo\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n\n    this.handleAdd = async () => {\n      if (this.state.colPreview !== null) {\n        if (this.state.colName !== null) {\n          var newCollection = {\n            colName: this.state.colName,\n            colPreview: this.state.colPreview\n          };\n          await this.repository.save('collections', newCollection);\n        } else {\n          alert('Введите название коллекции!');\n        }\n      } else {\n        alert(\"У коллекции должна быть обложка. Добавьте, пожалуйста обложку!\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Добавление коллекции\";\n    this.repository = new IndexedDbRepository(\"id\");\n    this.repository.findAll('collections').then(collections => this.setState({\n      collections\n    }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleImageChange(e) {\n    var file = e.target.files[0];\n\n    if (file != null && file != undefined) {\n      if (file.type.split('/')[0] === 'image') {\n        var reader = new FileReader();\n        reader.readAsBinaryString(file);\n\n        reader.onload = function (e) {\n          let bits = e.target.result;\n          this.setState({\n            colPreview: bits,\n            preview: URL.createObjectURL(file)\n          });\n        }.bind(this);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0439 \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u0438\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"imgcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.preview,\n      accept: \"image/*\",\n      id: \"colPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"colPreview\",\n      onChange: this.handleImageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input_1\",\n      id: \"colName\",\n      class: \"input_1\",\n      name: \"colName\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 161\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"button\",\n      onClick: this.handleAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")));\n  }\n\n}\n\nexport default AddCollectionPg;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/new/gallery/src/AddCollectionPg.js"],"names":["React","IndexedDbRepository","Link","withRouter","logo","AddCollectionPg","Component","constructor","props","state","colName","colPreview","preview","handleChange","bind","handleImageChange","handleAdd","newCollection","repository","save","alert","componentDidMount","document","title","findAll","then","collections","setState","e","target","name","value","file","files","undefined","type","split","reader","FileReader","readAsBinaryString","onload","bits","result","URL","createObjectURL","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/common.css';\r\nimport './css/Buttons.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport logo from './img/defaultOrganisationLogo.jpg';\r\n\r\nclass AddCollectionPg extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            colName: null,\r\n            colPreview: null,\r\n            preview: logo\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n        \r\n        this.handleAdd = async() => {\r\n            if(this.state.colPreview !== null)\r\n            {\r\n                if(this.state.colName !== null)\r\n                {\r\n                    var newCollection = { colName: this.state.colName,\r\n                    colPreview: this.state.colPreview };\r\n                    await this.repository.save( 'collections', newCollection); \r\n                }\r\n                else\r\n                {\r\n                    alert('Введите название коллекции!');\r\n                }\r\n            }\r\n            else\r\n            {\r\n                alert(\"У коллекции должна быть обложка. Добавьте, пожалуйста обложку!\");\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Добавление коллекции\";\r\n        this.repository = new IndexedDbRepository(\"id\");\r\n        this.repository.findAll('collections').then( collections => this.setState( { collections } ) );\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    handleImageChange(e) {\r\n        var file = e.target.files[0];\r\n        if(file !=null && file != undefined)\r\n        {\r\n            if(file.type.split('/')[0] === 'image')\r\n            {\r\n                var reader = new FileReader();\r\n                reader.readAsBinaryString(file);\r\n                reader.onload = function(e) {\r\n                    let bits = e.target.result; \r\n                    this.setState({\r\n                        colPreview: bits,\r\n                        preview: URL.createObjectURL(file)\r\n                    });    \r\n                }.bind(this);\r\n\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div class = \"container\">\r\n            <div class = \"header\"> \r\n                <h1>Добавление новой коллекции</h1>\r\n            </div>\r\n            <div class = \"imgcontent\">\r\n                <img src = {this.state.preview} accept = 'image/*' id=\"colPreview\"/><br/>\r\n                <input  type=\"file\" name=\"colPreview\" onChange={this.handleImageChange}/><br/>\r\n                <input class = \"input_1\" id=\"colName\" class=\"input_1\" name=\"colName\" type=\"text\" value={this.state.name} onChange={this.handleChange} required/><br/>\r\n                <button type=\"button\" class=\"button\" onClick={this.handleAdd}>Добавить</button>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCollectionPg;"]},"metadata":{},"sourceType":"module"}