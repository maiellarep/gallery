{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\gallery\\\\src\\\\AllImgPage.js\";\nimport React from 'react';\nimport './css/CollectionsPage.css';\nimport IndexedDbRepository from './IndexedRepository';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass AllImgPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: []\n    };\n    this.search = this.search.bind(this);\n\n    this.handleDelete = async idToDelete => {\n      await this.repository.deleteById(idToDelete);\n      this.setState({\n        images: await this.repository.findAll()\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.repository = new IndexedDbRepository(\"id\");\n    this.repository.findAll().then(images => this.setState({\n      images\n    }));\n  }\n\n  search(e) {\n    if (e.target.value == '') {\n      this.repository.findAll().then(images => this.setState({\n        images\n      }));\n    } else {\n      this.repository.searchByField('name', e.target.value).then(images => this.setState({\n        images\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"photo-wall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"search\",\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438...\",\n      onChange: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"\\u041F\\u043E\\u0438\\u0441\\u043A\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, () => {\n      if (isEmpty(this.state.images)) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }\n        }, \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F \\u0441 \\u0434\\u0430\\u043D\\u043D\\u044B\\u043C \\u0438\\u043C\\u0435\\u043D\\u0435\\u043C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"));\n      } else {\n        this.state.images.map(imgcontent => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            class: \"post\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            width: \"200px\",\n            height: \"100px\",\n            src: 'data:image/jpeg;base64,' + btoa(imgcontent.image),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }\n          }), /*#__PURE__*/React.createElement(\"h2\", {\n            class: \"title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }\n          }, imgcontent.name), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 41\n            }\n          }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", imgcontent.description), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }\n          }, \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \", imgcontent.format), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }\n          }, \"\\u0414\\u0430\\u0442\\u0430: \", imgcontent.date), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 41\n            }\n          }, \"\\u0422\\u0438\\u043F \\u0444\\u0430\\u0439\\u043B\\u0430: \", imgcontent.mimetype), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }\n          }, \"\\u0412\\u0435\\u0441: \", imgcontent.weight), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }\n          }, \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\\u044B: \", imgcontent.size), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }\n          }, \"\\u041A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u044F: \", imgcontent.collection), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            onClick: async () => {\n              await this.handleDelete(imgcontent.id);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }\n          }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"button\", {\n            class: \"btn green\",\n            type: \"button\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: /edit/ + imgcontent.id,\n            class: \"btnlink\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 81\n            }\n          }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"))));\n        });\n      }\n    })));\n  }\n\n}\n\nexport default withRouter(AllImgPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/gallery/src/AllImgPage.js"],"names":["React","IndexedDbRepository","Link","withRouter","AllImgPage","Component","constructor","props","state","images","search","bind","handleDelete","idToDelete","repository","deleteById","setState","findAll","componentDidMount","then","e","target","value","searchByField","render","isEmpty","map","imgcontent","btoa","image","name","description","format","date","mimetype","weight","size","collection","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,OAAOC,mBAAP,MAAgC,qBAAhC;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;;AAEA,SAAKC,YAAL,GAAoB,MAAOC,UAAP,IAAuB;AACvC,YAAM,KAAKC,UAAL,CAAgBC,UAAhB,CAA4BF,UAA5B,CAAN;AACA,WAAKG,QAAL,CAAe;AAAEP,QAAAA,MAAM,EAAE,MAAM,KAAKK,UAAL,CAAgBG,OAAhB;AAAhB,OAAf;AACD,KAHH;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,UAAL,GAAkB,IAAIb,mBAAJ,CAAwB,IAAxB,CAAlB;AACA,SAAKa,UAAL,CAAgBG,OAAhB,GAA0BE,IAA1B,CAAgCV,MAAM,IAAI,KAAKO,QAAL,CAAe;AAAEP,MAAAA;AAAF,KAAf,CAA1C;AAEH;;AAEDC,EAAAA,MAAM,CAACU,CAAD,EAAI;AACN,QAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,EAArB,EAAyB;AACrB,WAAKR,UAAL,CAAgBG,OAAhB,GAA0BE,IAA1B,CAAgCV,MAAM,IAAI,KAAKO,QAAL,CAAe;AAAEP,QAAAA;AAAF,OAAf,CAA1C;AACH,KAFD,MAGK;AACD,WAAKK,UAAL,CAAgBS,aAAhB,CAA8B,MAA9B,EAAsCH,CAAC,CAACC,MAAF,CAASC,KAA/C,EAAsDH,IAAtD,CAA2DV,MAAM,IAAI,KAAKO,QAAL,CAAe;AAAEP,QAAAA;AAAF,OAAf,CAArE;AACH;AAEJ;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,EAAE,EAAG,QAAZ;AAAqB,MAAA,IAAI,EAAG,MAA5B;AAAmC,MAAA,WAAW,EAAG,iJAAjD;AAAgF,MAAA,QAAQ,EAAI,KAAKd,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,MAAM;AAAC,UAAIe,OAAO,CAAC,KAAKjB,KAAL,CAAWC,MAAZ,CAAX,EAAgC;AACpC,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yNADG,CAAP;AAGH,OAJO,MAKH;AACD,aAAKD,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAuBC,UAAD,IAAgB;AAClC,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA;AAAK,YAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,KAAK,EAAG,OAAb;AAAqB,YAAA,MAAM,EAAG,OAA9B;AAAsC,YAAA,GAAG,EAAI,4BAA4BC,IAAI,CAACD,UAAU,CAACE,KAAZ,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,YAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmBF,UAAU,CAACG,IAA9B,CAFJ,eAGI;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAAkCH,UAAU,CAACI,WAA7C,CAHJ,eAII;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAgCJ,UAAU,CAACK,MAA3C,CAJJ,eAKI;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA8BL,UAAU,CAACM,IAAzC,CALJ,eAMI;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAAmCN,UAAU,CAACO,QAA9C,CANJ,eAOI;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA6BP,UAAU,CAACQ,MAAxC,CAPJ,eAQI;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAiCR,UAAU,CAACS,IAA5C,CARJ,eASI;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAAmCT,UAAU,CAACU,UAA9C,CATJ,eAUI;AAAQ,YAAA,IAAI,EAAG,QAAf;AAAwB,YAAA,OAAO,EAAI,YAAY;AAAC,oBAAM,KAAKzB,YAAL,CAAkBe,UAAU,CAACW,EAA7B,CAAN;AAAuC,aAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAVJ,eAWI;AAAQ,YAAA,KAAK,EAAC,WAAd;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwC,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAE,SAAQX,UAAU,CAACW,EAA7B;AAAiC,YAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAAxC,CAXJ,CADA,CADJ;AAiBC,SAlBL;AAmBH;AAAC,KA1BN,CAHJ,CADJ,CADJ;AAoCH;;AApEoC;;AAuEzC,eAAenC,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport './css/CollectionsPage.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nclass AllImgPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: []\r\n        }\r\n\r\n        this.search = this.search.bind(this);\r\n\r\n        this.handleDelete = async( idToDelete ) => {\r\n            await this.repository.deleteById( idToDelete );\r\n            this.setState( { images: await this.repository.findAll() } );\r\n          };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.repository = new IndexedDbRepository(\"id\");\r\n        this.repository.findAll().then( images => this.setState( { images } ) );\r\n        \r\n    }\r\n\r\n    search(e) {\r\n        if(e.target.value == '') {\r\n            this.repository.findAll().then( images => this.setState( { images } ) );\r\n        }\r\n        else {\r\n            this.repository.searchByField('name', e.target.value).then(images => this.setState( { images } ) );\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div id=\"photo-wall\">\r\n                    <input id = \"search\" type = \"text\" placeholder = \"Введите название картинки...\" onChange = {this.search}/>\r\n                    <button type = \"button\">Поиск</button>\r\n                    <ul>\r\n                        {() => {if (isEmpty(this.state.images)) {\r\n                            return(<li>\r\n                                <h1>Изображения с данным именем не найдены</h1>\r\n                                </li>);\r\n                        }\r\n                        else {\r\n                            this.state.images.map((imgcontent) => {\r\n                                return (\r\n                                    <li>\r\n                                    <div class=\"post\">\r\n                                        <img width = \"200px\" height = \"100px\" src = {'data:image/jpeg;base64,' + btoa(imgcontent.image)}/>\r\n                                        <h2 class=\"title\">{imgcontent.name}</h2>\r\n                                        <p class=\"description\">Описание: {imgcontent.description}</p>\r\n                                        <p class=\"description\">Формат: {imgcontent.format}</p>\r\n                                        <p class=\"description\">Дата: {imgcontent.date}</p>\r\n                                        <p class=\"description\">Тип файла: {imgcontent.mimetype}</p>\r\n                                        <p class=\"description\">Вес: {imgcontent.weight}</p>\r\n                                        <p class=\"description\">Размеры: {imgcontent.size}</p>\r\n                                        <p class=\"description\">Коллекция: {imgcontent.collection}</p>\r\n                                        <button type = \"button\" onClick = {async () => {await this.handleDelete(imgcontent.id)}}>Удалить</button>\r\n                                        <button class=\"btn green\" type=\"button\"><Link to={/edit/+ imgcontent.id} class=\"btnlink\" >Редактировать</Link></button>\r\n                                    </div>\r\n                                    </li>\r\n                                );\r\n                                });\r\n                        }}  }   \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AllImgPage);"]},"metadata":{},"sourceType":"module"}