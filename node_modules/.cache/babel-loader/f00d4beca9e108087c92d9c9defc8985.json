{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\gallery\\\\src\\\\EditImg.js\";\nimport React from 'react';\nimport './css/CollectionsPage.css';\nimport IndexedDbRepository from './IndexedRepository';\n\nclass EditImg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.state = {\n      obj: null\n    };\n\n    this.handleAdd = async () => {\n      var date = new Date();\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      await this.repository.save({\n        image: this.state.image,\n        name: this.state.name,\n        description: this.state.description,\n        format: this.state.format,\n        date: day + '.' + month + '.' + year,\n        mimetype: this.state.mimetype,\n        weight: this.state.weight,\n        size: this.state.size,\n        collection: this.state.collection\n      });\n      this.setState({\n        tasks: null\n      });\n      this.setState({\n        tasks: await this.repository.findAll()\n      });\n      console.log(this.state.tasks);\n    };\n  }\n\n  componentDidMount() {\n    this.repository = new IndexedDbRepository();\n    this.repository.findAll().then(tasks => this.setState({\n      tasks\n    }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleImageChange(e) {\n    var file = e.target.files[0];\n    this.setState({\n      mimetype: '.' + file.type.split('/')[1],\n      weight: (file.size / 1024 / 1024).toFixed(2) + \" МБ\"\n    });\n    console.log(file);\n    var reader = new FileReader();\n    console.log(reader);\n    var preview = document.getElementById(\"preview\");\n    reader.readAsBinaryString(file);\n\n    reader.onload = function (e) {\n      let bits = e.target.result;\n      preview.src = 'data:image/jpeg;base64,' + btoa(bits);\n      var img = new Image();\n      img.src = 'data:image/jpeg;base64,' + btoa(bits);\n\n      img.onload = () => {\n        var size = img.height + \"X\" + img.width + \" px\";\n        this.setState({\n          image: bits,\n          size: size\n        });\n      };\n    }.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"));\n  }\n\n}\n\nexport default EditImg;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/gallery/src/EditImg.js"],"names":["React","IndexedDbRepository","EditImg","Component","constructor","props","handleChange","bind","handleImageChange","state","obj","handleAdd","date","Date","day","getDate","month","getMonth","year","getFullYear","repository","save","image","name","description","format","mimetype","weight","size","collection","setState","tasks","findAll","console","log","componentDidMount","then","e","target","value","file","files","type","split","toFixed","reader","FileReader","preview","document","getElementById","readAsBinaryString","onload","bits","result","src","btoa","img","Image","height","width","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/CollectionsPage.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\n\r\nclass EditImg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n        this.state = {\r\n            obj: null\r\n        }\r\n\r\n        this.handleAdd = async() => {\r\n            var date = new Date();\r\n            var day = date.getDate();\r\n            var month = date.getMonth()+1;\r\n            var year = date.getFullYear();\r\n\r\n            await this.repository.save( { image: this.state.image, \r\n                                            name: this.state.name, \r\n                                            description: this.state.description, \r\n                                            format: this.state.format,\r\n                                            date: day + '.' + month + '.' + year,\r\n                                            mimetype: this.state.mimetype,\r\n                                            weight: this.state.weight,\r\n                                            size: this.state.size,\r\n                                            collection: this.state.collection}\r\n                                             );\r\n            this.setState( { tasks: null } );\r\n            this.setState( { tasks: await this.repository.findAll() } );\r\n            console.log(this.state.tasks);\r\n          };\r\n\r\n    }\r\n    componentDidMount() {\r\n       \r\n        this.repository = new IndexedDbRepository();\r\n        this.repository.findAll().then( tasks => this.setState( { tasks } ) );\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    handleImageChange(e) {\r\n        var file = e.target.files[0];\r\n        this.setState({\r\n            mimetype: '.' + file.type.split('/')[1],\r\n            weight: (file.size/1024/1024).toFixed(2) + \" МБ\"\r\n        });\r\n\r\n        console.log(file);\r\n        var reader = new FileReader();\r\n        console.log(reader);\r\n        var preview = document.getElementById(\"preview\");\r\n        reader.readAsBinaryString(file);\r\n        \r\n\t\t\t\treader.onload = function(e) {\r\n                    let bits = e.target.result;\r\n                    preview.src = 'data:image/jpeg;base64,' + btoa(bits);\r\n                    var img = new Image();\r\n                    img.src = 'data:image/jpeg;base64,' + btoa(bits);\r\n                    img.onload = () => {\r\n                        \r\n                    var size = img.height + \"X\" + img.width + \" px\";\r\n                        this.setState({\r\n                            image: bits,\r\n                            size: size\r\n                        });\r\n                    }\r\n                    \r\n                }.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <h1>Редактирование</h1>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditImg;"]},"metadata":{},"sourceType":"module"}