{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\new\\\\gallery\\\\src\\\\AllImgPage.js\";\nimport React from 'react';\nimport './css/common.css';\nimport './css/AllImg.css';\nimport IndexedDbRepository from './IndexedRepository';\nimport { Link, withRouter } from 'react-router-dom';\nimport Menu from './Menu';\n\nclass AllImgPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      searchItem: 'name'\n    };\n    this.search = this.search.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleDelete = async idToDelete => {\n      await this.repository.deleteById('photos', idToDelete);\n      this.setState({\n        images: await this.repository.findAll('photos')\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.repository = new IndexedDbRepository(\"id\");\n    this.repository.findAll('photos').then(images => this.setState({\n      images\n    }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  search(e) {\n    if (e.target.value === '') {\n      this.repository.findAll('photos').then(images => this.setState({\n        images\n      }));\n    } else {\n      this.repository.searchByField('photos', this.state.searchItem, e.target.value).then(images => this.setState({\n        images\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"\\u0413\\u0430\\u043B\\u0435\\u0440\\u0435\\u044F \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0439\"), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"searchstr\",\n      id: \"search\",\n      type: \"text\",\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A (\\u043F\\u0440\\u043E\\u0438\\u0441\\u0445\\u043E\\u0434\\u0438\\u0442 \\u0432 \\u0436\\u0438\\u0432\\u043E\\u043C \\u0440\\u0435\\u0436\\u0438\\u043C\\u0435)\",\n      onChange: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"searchItem\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"\\u041F\\u043E \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044E\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"collections\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"\\u041F\\u043E \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u0438\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"photosUl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, this.state.images.map(imgcontent => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: /imgpage/ + imgcontent.id,\n        class: \"btnlink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"photoDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        class: \"photoImg\",\n        src: 'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: async () => {\n          await this.handleDelete(imgcontent.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn green\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: /edit/ + imgcontent.id,\n        class: \"btnlink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 69\n        }\n      }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: 'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image),\n        download: imgcontent.name + imgcontent.mimetype,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\"))));\n    })));\n  }\n\n}\n\nexport default withRouter(AllImgPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/new/gallery/src/AllImgPage.js"],"names":["React","IndexedDbRepository","Link","withRouter","Menu","AllImgPage","Component","constructor","props","state","images","searchItem","search","bind","handleChange","handleDelete","idToDelete","repository","deleteById","setState","findAll","componentDidMount","then","e","target","name","value","searchByField","render","map","imgcontent","id","mimetype","split","pop","btoa","image"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport './css/common.css';\r\nimport './css/AllImg.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport Menu from './Menu';\r\n\r\nclass AllImgPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: [],\r\n            searchItem: 'name'\r\n        }\r\n\r\n        this.search = this.search.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDelete = async( idToDelete ) => {\r\n            await this.repository.deleteById( 'photos', idToDelete );\r\n            this.setState( { images: await this.repository.findAll('photos') } );\r\n          };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.repository = new IndexedDbRepository(\"id\");\r\n        this.repository.findAll('photos').then( images => this.setState( { images } ) );\r\n        \r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    search(e) {\r\n        if(e.target.value === '') {\r\n            this.repository.findAll('photos').then( images => this.setState( { images } ) );\r\n        }\r\n        else {\r\n            this.repository.searchByField('photos', this.state.searchItem, e.target.value).then(images => this.setState( { images } ) );\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div class = \"header\"> \r\n                    <Menu />\r\n                    <h1>Галерея изображений</h1>\r\n                    \r\n                    <input class = \"searchstr\" id = \"search\" type = \"text\" placeholder = \"Поиск (происходит в живом режиме)\" onChange = {this.search}/>\r\n                    <select name = \"searchItem\" onChange = {this.handleChange}>\r\n                        <option value = \"name\">По названию</option>\r\n                        <option value = \"collections\">По коллекции</option>\r\n                    </select>\r\n                    \r\n\r\n                </div>\r\n                    <ul class = \"photosUl\">\r\n                        {this.state.images.map((imgcontent) => {\r\n                    return (\r\n                        <li>\r\n                        <div class=\"photo\">\r\n                            <Link to={/imgpage/+ imgcontent.id} class=\"btnlink\" >\r\n                                <div class = \"photoDiv\">\r\n                                    <img class = \"photoImg\" src = {'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image)}/>\r\n                                </div>\r\n                                \r\n                            </Link>\r\n                            \r\n                            {/*<h2 class=\"title\">{imgcontent.name}</h2>\r\n                            <p class=\"description\">Описание: {imgcontent.description}</p>\r\n                            <p class=\"description\">Формат: {imgcontent.format}</p>\r\n                            <p class=\"description\">Дата: {imgcontent.date}</p>\r\n                            <p class=\"description\">Тип файла: {imgcontent.mimetype}</p>\r\n                            <p class=\"description\">Вес: {imgcontent.weight}</p>\r\n                            <p class=\"description\">Размеры: {imgcontent.size}</p>\r\n                            <p class=\"description\">Коллекция: {imgcontent.collection}</p>*/}\r\n                            <br/>\r\n                            <button type = \"button\" onClick = {async () => {await this.handleDelete(imgcontent.id)}}>Удалить</button>\r\n                            <button class=\"btn green\" type=\"button\"><Link to={/edit/+ imgcontent.id} class=\"btnlink\" >Редактировать</Link></button>\r\n                            <button><a href = {'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image)} download = {imgcontent.name+imgcontent.mimetype}>Скачать</a></button>\r\n                        </div>\r\n                        </li>\r\n                    )\r\n                    })}     \r\n                    </ul>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AllImgPage);"]},"metadata":{},"sourceType":"module"}