{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\new\\\\gallery\\\\src\\\\StorageInfo.js\";\nimport React from 'react';\nimport './css/common.css';\nimport './css/Buttons.css';\nimport IndexedDbRepository from './IndexedRepository';\nimport Menu from './Menu';\n\nclass StorageInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearStorage = () => {\n      if (window.confirm('Вы уверенны что хотите очистить хранилище? Все изображение будут удалены!')) {\n        this.repository.deleteAll('photos').then(alert(\"Хранилище было ичещено\"));\n      }\n    };\n\n    this.clearStorage = this.clearStorage.bind(this);\n    this.state = {\n      recordsNum: '',\n      total: 0,\n      nowUsing: 0,\n      usingPercent: 0\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Хранилище\";\n    this.repository = new IndexedDbRepository();\n    this.repository.count('photos').then(recordsNum => this.setState({\n      recordsNum\n    }));\n    navigator.storage.estimate().then(result => {\n      this.setState({\n        total: result.quota\n      });\n      this.setState({\n        nowUsing: result.usage\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0435\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"\\u0412 \\u0431\\u0430\\u0437\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \", this.state.recordsNum, \" \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E \\u043C\\u0435\\u0441\\u0442\\u0430: \", this.state.total), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E: \", this.state.nowUsing), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E (\\u0432 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442\\u0430\\u0445): \", this.state.nowUsing / this.state.total * 100, \"%\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button\",\n      type: \"button\",\n      onClick: this.clearStorage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0435\"));\n  }\n\n}\n\nexport default StorageInfo;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/new/gallery/src/StorageInfo.js"],"names":["React","IndexedDbRepository","Menu","StorageInfo","Component","constructor","props","clearStorage","window","confirm","repository","deleteAll","then","alert","bind","state","recordsNum","total","nowUsing","usingPercent","componentDidMount","document","title","count","setState","navigator","storage","estimate","result","quota","usage","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAO,mBAAP;AACA,OAAOC,mBAAP,MAAgC,qBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuBnBC,YAvBmB,GAuBJ,MAAM;AACnB,UAAGC,MAAM,CAACC,OAAP,CAAe,2EAAf,CAAH,EACA;AACE,aAAKC,UAAL,CAAgBC,SAAhB,CAA0B,QAA1B,EAAoCC,IAApC,CAAyCC,KAAK,CAAC,wBAAD,CAA9C;AACD;AACF,KA5BkB;;AAGf,SAAKN,YAAL,GAAoB,KAAKA,YAAL,CAAkBO,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,KAAK,EAAE,CAFE;AAGTC,MAAAA,QAAQ,EAAE,CAHD;AAITC,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,WAAjB;AACE,SAAKZ,UAAL,GAAkB,IAAIT,mBAAJ,EAAlB;AACA,SAAKS,UAAL,CAAgBa,KAAhB,CAAsB,QAAtB,EAAgCX,IAAhC,CAAqCI,UAAU,IAAI,KAAKQ,QAAL,CAAc;AAACR,MAAAA;AAAD,KAAd,CAAnD;AAEAS,IAAAA,SAAS,CAACC,OAAV,CAAkBC,QAAlB,GAA6Bf,IAA7B,CAAmCgB,MAAD,IAAY;AAC5C,WAAKJ,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAEW,MAAM,CAACC;AAAf,OAAd;AACA,WAAKL,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAEU,MAAM,CAACE;AAAlB,OAAd;AACD,KAHD;AAIH;;AASHC,EAAAA,MAAM,GACN;AACE,wBACE;AAAK,MAAA,KAAK,EAAG,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAAkB,KAAKhB,KAAL,CAAWC,UAA7B,gDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAA0B,KAAKD,KAAL,CAAWE,KAArC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAY,KAAKF,KAAL,CAAWG,QAAvB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAA0B,KAAKH,KAAL,CAAWG,QAAX,GAAoB,KAAKH,KAAL,CAAWE,KAA/B,GAAqC,GAA/D,MAJF,CALF,eAYE;AAAQ,MAAA,KAAK,EAAG,QAAhB;AAAyB,MAAA,IAAI,EAAG,QAAhC;AAAyC,MAAA,OAAO,EAAI,KAAKV,YAAL,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAZF,CADF;AAgBD;;AAjDuC;;AAoD1C,eAAeJ,WAAf","sourcesContent":["import React from 'react';\r\nimport './css/common.css';\r\nimport './css/Buttons.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\nimport Menu from './Menu';\r\n\r\nclass StorageInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.clearStorage = this.clearStorage.bind(this);\r\n        this.state = {\r\n            recordsNum: '',\r\n            total: 0,\r\n            nowUsing: 0,\r\n            usingPercent: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.title = \"Хранилище\";\r\n        this.repository = new IndexedDbRepository();\r\n        this.repository.count('photos').then(recordsNum => this.setState({recordsNum}));\r\n\r\n        navigator.storage.estimate().then((result) => {\r\n          this.setState({total: result.quota});\r\n          this.setState({nowUsing: result.usage});\r\n        });\r\n    }\r\n\r\n    clearStorage = () => {\r\n      if(window.confirm('Вы уверенны что хотите очистить хранилище? Все изображение будут удалены!'))\r\n      {\r\n        this.repository.deleteAll('photos').then(alert(\"Хранилище было ичещено\"));\r\n      }\r\n    }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div class = \"container\">\r\n        <div class = \"header\">\r\n          <Menu />\r\n          <h1>Информация о хранилище</h1>\r\n        </div>\r\n        <div>\r\n          <p>В базе данных {this.state.recordsNum} записей</p>\r\n          <p>Всего доступно места: {this.state.total}</p>\r\n          <p>Занято: {this.state.nowUsing}</p>\r\n          <p>Занято (в процентах): {this.state.nowUsing/this.state.total*100}%</p>\r\n        </div>\r\n\r\n        <button class = \"button\" type = \"button\" onClick = {this.clearStorage()}>Очистить хранилище</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorageInfo;\r\n"]},"metadata":{},"sourceType":"module"}