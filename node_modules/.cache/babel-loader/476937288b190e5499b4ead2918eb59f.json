{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\new\\\\gallery\\\\src\\\\ImgPage.js\";\nimport React from 'react';\nimport './css/CollectionsPage.css';\nimport IndexedDbRepository from './IndexedRepository';\n\nclass ImgPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.state = {\n      name: '',\n      format: '',\n      description: '',\n      size: '',\n      weight: '',\n      mimetype: '',\n      image: '',\n      collection: '',\n      date: '',\n      id: null\n    };\n\n    this.handleAdd = async () => {\n      var date = new Date();\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      await this.repository.save('photos', {\n        image: this.state.image,\n        name: this.state.name,\n        description: this.state.description,\n        format: this.state.format,\n        date: day + '.' + month + '.' + year,\n        mimetype: this.state.mimetype,\n        weight: this.state.weight,\n        size: this.state.size,\n        collection: this.state.collection\n      }); //this.setState( { tasks: null } );\n      // this.setState( { tasks: await this.repository.findAll('photos') } );\n\n      console.log(this.state.tasks);\n    };\n  }\n\n  componentDidMount() {\n    this.repository = new IndexedDbRepository();\n    this.repository.findById('photos', parseInt(this.props.match.params.id)).then(r => this.setState({\n      image: r.image,\n      name: r.name,\n      description: r.description,\n      format: r.format,\n      mimetype: r.mimetype,\n      weight: r.weight,\n      size: r.size,\n      collection: r.collection,\n      date: r.date,\n      id: r.id\n    }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleImageChange(e) {\n    var file = e.target.files[0];\n    this.setState({\n      mimetype: '.' + file.type.split('/')[1],\n      weight: (file.size / 1024 / 1024).toFixed(2) + \" МБ\"\n    });\n    var reader = new FileReader();\n    var preview = document.getElementById(\"preview\");\n    reader.readAsBinaryString(file);\n\n    reader.onload = function (e) {\n      let bits = e.target.result;\n      preview.src = 'data:image/jpeg;base64,' + btoa(bits);\n      var img = new Image();\n      img.src = 'data:image/jpeg;base64,' + btoa(bits);\n\n      img.onload = () => {\n        var size = img.height + \"х\" + img.width + \" px\";\n        this.setState({\n          image: bits,\n          size: size\n        });\n      };\n    }.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"200px\",\n      height: \"100px\",\n      src: 'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, this.state.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, this.state.format), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, this.state.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, this.state.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, this.state.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, this.state.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, this.state.description));\n  }\n\n}\n\nexport default ImgPage;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/new/gallery/src/ImgPage.js"],"names":["React","IndexedDbRepository","ImgPage","Component","constructor","props","handleChange","bind","handleImageChange","state","name","format","description","size","weight","mimetype","image","collection","date","id","handleAdd","Date","day","getDate","month","getMonth","year","getFullYear","repository","save","console","log","tasks","componentDidMount","findById","parseInt","match","params","then","r","setState","e","target","value","file","files","type","split","toFixed","reader","FileReader","preview","document","getElementById","readAsBinaryString","onload","bits","result","src","btoa","img","Image","height","width","render","imgcontent","pop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/CollectionsPage.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\n\r\nclass ImgPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n        this.state = {\r\n            name: '',\r\n            format: '',\r\n            description: '', \r\n            size: '',\r\n            weight: '',\r\n            mimetype: '',\r\n            image: '',\r\n            collection: '',\r\n            date: '',\r\n            id: null\r\n        }\r\n\r\n        this.handleAdd = async() => {\r\n            var date = new Date();\r\n            var day = date.getDate();\r\n            var month = date.getMonth()+1;\r\n            var year = date.getFullYear();\r\n\r\n            await this.repository.save( 'photos', { image: this.state.image, \r\n                                            name: this.state.name, \r\n                                            description: this.state.description, \r\n                                            format: this.state.format,\r\n                                            date: day + '.' + month + '.' + year,\r\n                                            mimetype: this.state.mimetype,\r\n                                            weight: this.state.weight,\r\n                                            size: this.state.size,\r\n                                            collection: this.state.collection}\r\n                                             );\r\n            //this.setState( { tasks: null } );\r\n           // this.setState( { tasks: await this.repository.findAll('photos') } );\r\n            console.log(this.state.tasks);\r\n          };\r\n    }\r\n    componentDidMount() {\r\n       \r\n        this.repository = new IndexedDbRepository();\r\n        this.repository.findById('photos', parseInt(this.props.match.params.id)).then( r => this.setState( {             \r\n            image: r.image,\r\n            name: r.name,\r\n            description: r.description,\r\n            format: r.format,\r\n            mimetype: r.mimetype,\r\n            weight: r.weight,\r\n            size: r.size,\r\n            collection: r.collection,\r\n            date: r.date,\r\n            id: r.id } ) );\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    handleImageChange(e) {\r\n        var file = e.target.files[0];\r\n        this.setState({\r\n            mimetype: '.' + file.type.split('/')[1],\r\n            weight: (file.size/1024/1024).toFixed(2) + \" МБ\"\r\n        });\r\n        var reader = new FileReader();\r\n        var preview = document.getElementById(\"preview\");\r\n        reader.readAsBinaryString(file);\r\n        \r\n\t\t\t\treader.onload = function(e) {\r\n                    let bits = e.target.result;\r\n                    preview.src = 'data:image/jpeg;base64,' + btoa(bits);\r\n                    var img = new Image();\r\n                    img.src = 'data:image/jpeg;base64,' + btoa(bits);\r\n                    img.onload = () => {\r\n                        \r\n                    var size = img.height + \"х\" + img.width + \" px\";\r\n                        this.setState({\r\n                            image: bits,\r\n                            size: size\r\n                        });\r\n                    }\r\n                    \r\n                }.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img width = \"200px\" height = \"100px\" src = {'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image)}/>\r\n                <h1>{this.state.name}</h1>\r\n                <p>{this.state.description}</p>\r\n                <p>{this.state.format}</p>\r\n                <p>{this.state.description}</p>\r\n                <p>{this.state.description}</p>\r\n                <p>{this.state.description}</p>\r\n                <p>{this.state.description}</p>\r\n                <p>{this.state.description}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ImgPage;"]},"metadata":{},"sourceType":"module"}