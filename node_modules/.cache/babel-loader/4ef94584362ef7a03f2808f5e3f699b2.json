{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\gallery\\\\src\\\\AddImg.js\";\nimport React from 'react';\nimport './css/CollectionsPage.css';\nimport IndexedDBRepository from './IndexedRepository.js';\n\nclass AddImg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.add = this.add.bind(this);\n    this.state = {\n      d: null,\n      name: 'rgergev',\n      format: 'ergerger',\n      description: '',\n      image: ''\n    };\n  }\n\n  componentDidMount() {\n    /*if ( !window.indexedDB ) window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n    if ( !window.IDBTransaction ) window.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n    if ( !window.IDBKeyRange ) window.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n    var d;\r\n    var openRequest = indexedDB.open(\"gallery\",1);\r\n    openRequest.onsuccess = function(e) {\r\n        console.log(\"Success!\");\r\n          d = e.target.result;\r\n        d.onerror = function(event){\r\n            alert(event.target.errorcode);\r\n        }\r\n    }\r\n       openRequest.onerror = function(e) {\r\n        console.log(\"Error\");\r\n        console.dir(e);\r\n    }\r\n      this.setState(\r\n        {db: d}\r\n    );\r\n    */\n    var request = window.indexedDB.open(\"testDB\", 1);\n    var db;\n\n    request.onerror = function (event) {\n      console.log(\"Error opening DB\", event);\n    };\n\n    request.onupgradeneeded = function (event) {\n      console.log(\"Upgrading\");\n      db = event.target.result;\n      var objectStore = db.createObjectStore(\"students\", {\n        keyPath: \"rollNo\"\n      });\n    };\n\n    request.onsuccess = function (event) {\n      console.log(\"Success opening DB\");\n      db = event.target.result;\n    };\n\n    var transaction = db.transaction([\"students\"], \"readwrite\");\n\n    transaction.oncomplete = function (event) {\n      console.log(\"Success\");\n    };\n\n    transaction.onerror = function (event) {\n      console.log(\"Error\");\n    };\n\n    var objectStore = transaction.objectStore(\"students\");\n    objectStore.add(\"egega\");\n  }\n\n  add() {\n    alert(\"dfbdv\");\n    alert(this.state.db);\n    var transaction = this.state.db.transaction([\"notes\"], \"readwrite\");\n    var store = transaction.objectStore(\"notes\");\n    var request = store.add({\n      name: this.state.name,\n      format: this.state.format\n    }, 1);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"BDFBFSBS\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"fbfdbds\"));\n  }\n\n}\n\nexport default AddImg;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/gallery/src/AddImg.js"],"names":["React","IndexedDBRepository","AddImg","Component","constructor","props","add","bind","state","d","name","format","description","image","componentDidMount","request","window","indexedDB","open","db","onerror","event","console","log","onupgradeneeded","target","result","objectStore","createObjectStore","keyPath","onsuccess","transaction","oncomplete","alert","store","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/CollectionsPage.css';\r\nimport IndexedDBRepository from './IndexedRepository.js';\r\n\r\nclass AddImg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.add = this.add.bind(this);\r\n        this.state = {\r\n            d: null,\r\n            name: 'rgergev',\r\n            format: 'ergerger',\r\n            description: '', \r\n            image: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        /*if ( !window.indexedDB ) window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        if ( !window.IDBTransaction ) window.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n        if ( !window.IDBKeyRange ) window.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n        var d;\r\n        var openRequest = indexedDB.open(\"gallery\",1);\r\n        openRequest.onsuccess = function(e) {\r\n            console.log(\"Success!\");\r\n\r\n            d = e.target.result;\r\n            d.onerror = function(event){\r\n                alert(event.target.errorcode);\r\n            }\r\n        }\r\n \r\n        openRequest.onerror = function(e) {\r\n            console.log(\"Error\");\r\n            console.dir(e);\r\n        }\r\n\r\n        this.setState(\r\n            {db: d}\r\n        );\r\n        */\r\n \r\n\r\n        var request = window.indexedDB.open(\"testDB\", 1);\r\n\r\n        var db;\r\nrequest.onerror = function(event){\r\n    console.log(\"Error opening DB\", event);\r\n}\r\nrequest.onupgradeneeded   = function(event){\r\n    console.log(\"Upgrading\");\r\n    db = event.target.result;\r\n    var objectStore = db.createObjectStore(\"students\", { keyPath : \"rollNo\" });\r\n};\r\nrequest.onsuccess  = function(event){\r\n    console.log(\"Success opening DB\");\r\n    db = event.target.result;\r\n}\r\nvar transaction = db.transaction([\"students\"],\"readwrite\");\r\ntransaction.oncomplete = function(event) {\r\n    console.log(\"Success\");\r\n};\r\n\r\ntransaction.onerror = function(event) {\r\n    console.log(\"Error\");\r\n};  \r\nvar objectStore = transaction.objectStore(\"students\");\r\n\r\nobjectStore.add(\"egega\");\r\n    }\r\n\r\n    add() {\r\n        alert(\"dfbdv\");\r\n        alert(this.state.db);\r\n        var transaction = this.state.db.transaction([\"notes\"],\"readwrite\");\r\n        var store = transaction.objectStore(\"notes\");\r\n\r\n        var request = store.add({name: this.state.name, format: this.state.format},1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>BDFBFSBS</h1>\r\n                <button type=\"button\" onClick={this.add}>fbfdbds</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddImg;"]},"metadata":{},"sourceType":"module"}