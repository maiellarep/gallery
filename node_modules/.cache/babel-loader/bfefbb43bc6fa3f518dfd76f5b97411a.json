{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\new\\\\gallery\\\\src\\\\EditImg.js\";\nimport React from 'react';\nimport './css/common.css';\nimport './css/Buttons.css';\nimport './css/Inputs.css';\nimport IndexedDbRepository from './IndexedRepository';\n\nclass EditImg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.state = {\n      image: null,\n      name: null,\n      description: null,\n      format: null,\n      mimetype: null,\n      weight: null,\n      size: null,\n      collection: null,\n      date: null,\n      id: null,\n      tags: null,\n      colList: []\n    };\n\n    this.handleAdd = async () => {\n      await this.repository.save('photos', {\n        image: this.state.image,\n        name: this.state.name,\n        description: this.state.description,\n        format: this.state.format,\n        mimetype: this.state.mimetype,\n        weight: this.state.weight,\n        size: this.state.size,\n        collection: this.state.collection,\n        date: this.state.date,\n        id: this.state.id,\n        tags: this.state.tags\n      });\n      this.setState({\n        tasks: null\n      });\n      this.setState({\n        tasks: await this.repository.findAll('photos')\n      });\n      console.log(this.state.tasks);\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Редактирование картинки\";\n    this.repository = new IndexedDbRepository(); //this.repository.findAll().then( tasks => this.setState( { tasks } ) );\n\n    /*this.repository.findById('photos', parseInt(this.props.match.params.id)).then( r => this.setState( {             \r\n        image: r.image,\r\n        name: r.name,\r\n        description: r.description,\r\n        format: r.format,\r\n        mimetype: r.mimetype,\r\n        weight: r.weight,\r\n        size: r.size,\r\n        collection: r.collection,\r\n        date: r.date,\r\n        tags: r.tags.toString(),\r\n        id: r.id } ) );*/\n\n    this.repository.findById('photos', parseInt(this.props.match.params.id)).then(r => this.obj = r);\n    this.repository.findAll('collections').then(colList => this.setState({\n      colList\n    })); //this.repository.findById(this.props.match.params.id).then(obj => this.setState({obj}));\n  }\n\n  handleChange(e) {\n    if (e.target.name === 'tags') {\n      var arr = e.target.value.split(',');\n      this.setState({\n        tags: arr\n      });\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n  }\n\n  handleImageChange(e) {\n    var file = e.target.files[0];\n\n    if (file.type.split('/')[0] === 'image') {\n      this.setState({\n        mimetype: '.' + file.type.split('/')[1],\n        weight: (file.size / 1024 / 1024).toFixed(2) + \" МБ\",\n        preview: URL.createObjectURL(file)\n      });\n      var reader = new FileReader();\n      reader.readAsBinaryString(file);\n\n      reader.onload = function (e) {\n        let bits = e.target.result;\n        var img = new Image();\n        img.src = 'data:image/' + this.state.mimetype.split('.').pop() + ';base64,' + btoa(bits);\n\n        img.onload = () => {\n          var size = img.height + \"х\" + img.width + \" px\";\n          this.setState({\n            image: 'data:image/' + this.state.mimetype.split('.').pop() + ';base64,' + btoa(bits),\n            size: size\n          });\n        };\n      }.bind(this);\n    } else {\n      alert(\"Неправильный тип файла! Загрузите изображение!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"imgcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: 'data:image/jpeg;base64,' + btoa(this.state.image),\n      id: \"preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 91\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: this.handleImageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 80\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input_1\",\n      id: \"name\",\n      class: \"input_1\",\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 151\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      class: \"textarea_1\",\n      name: \"description\",\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input_1\",\n      name: \"tags\",\n      type: \"text\",\n      value: this.state.tags,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 125\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442\"), /*#__PURE__*/React.createElement(\"select\", {\n      class: \"select\",\n      name: \"format\",\n      value: this.state.format,\n      onChange: this.handleChange,\n      onLoad: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 136\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\\u0410\\u043B\\u044C\\u0431\\u043E\\u043C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"\\u0410\\u043B\\u044C\\u0431\\u043E\\u043C\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\\u041F\\u043E\\u0440\\u0442\\u0440\\u0435\\u0442\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"\\u041F\\u043E\\u0440\\u0442\\u0440\\u0435\\u0442\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\\u041A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"\\u041A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"\\u041A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"select\", {\n      class: \"select\",\n      name: \"collection\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\\u0414\\u0440\\u0443\\u0433\\u043E\\u0435\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"\\u0414\\u0440\\u0443\\u0433\\u043E\\u0435\"), this.state.colList.map(item => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item.colName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }, item.colName);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"button\",\n      onClick: this.handleAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\")));\n  }\n\n}\n\nexport default EditImg;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/new/gallery/src/EditImg.js"],"names":["React","IndexedDbRepository","EditImg","Component","constructor","props","handleChange","bind","handleImageChange","state","image","name","description","format","mimetype","weight","size","collection","date","id","tags","colList","handleAdd","repository","save","setState","tasks","findAll","console","log","componentDidMount","document","title","findById","parseInt","match","params","then","r","obj","e","target","arr","value","split","file","files","type","toFixed","preview","URL","createObjectURL","reader","FileReader","readAsBinaryString","onload","bits","result","img","Image","src","pop","btoa","height","width","alert","render","map","item","colName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/common.css';\r\nimport './css/Buttons.css';\r\nimport './css/Inputs.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\n\r\nclass EditImg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n        this.state = {\r\n            image: null,\r\n            name: null,\r\n            description: null,\r\n            format: null,\r\n            mimetype: null,\r\n            weight: null,\r\n            size: null,\r\n            collection: null,\r\n            date: null,\r\n            id: null,\r\n            tags: null,\r\n            colList: []\r\n        }\r\n\r\n        this.handleAdd = async() => {\r\n\r\n            await this.repository.save( 'photos',             \r\n            {image: this.state.image,\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            format: this.state.format,\r\n            mimetype: this.state.mimetype,\r\n            weight: this.state.weight,\r\n            size: this.state.size,\r\n            collection: this.state.collection,\r\n            date: this.state.date,\r\n            id: this.state.id,\r\n            tags: this.state.tags});\r\n            this.setState( { tasks: null } );\r\n            this.setState( { tasks: await this.repository.findAll('photos') } );\r\n            console.log(this.state.tasks);\r\n          };\r\n\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Редактирование картинки\";\r\n        this.repository = new IndexedDbRepository();\r\n        //this.repository.findAll().then( tasks => this.setState( { tasks } ) );\r\n        /*this.repository.findById('photos', parseInt(this.props.match.params.id)).then( r => this.setState( {             \r\n            image: r.image,\r\n            name: r.name,\r\n            description: r.description,\r\n            format: r.format,\r\n            mimetype: r.mimetype,\r\n            weight: r.weight,\r\n            size: r.size,\r\n            collection: r.collection,\r\n            date: r.date,\r\n            tags: r.tags.toString(),\r\n            id: r.id } ) );*/\r\n            this.repository.findById('photos', parseInt(this.props.match.params.id)).then( r => this.obj = r);\r\n            this.repository.findAll('collections'). then( colList => this.setState( { colList } ) );\r\n        //this.repository.findById(this.props.match.params.id).then(obj => this.setState({obj}));\r\n    }\r\n\r\n    handleChange(e) {\r\n        if(e.target.name === 'tags')\r\n        {\r\n            var arr = e.target.value.split(',');\r\n            this.setState({tags: arr});\r\n        }\r\n        else{\r\n            this.setState({[e.target.name]: e.target.value});\r\n        }\r\n\r\n    }\r\n\r\n    handleImageChange(e) {\r\n        var file = e.target.files[0];\r\n        if(file.type.split('/')[0] === 'image')\r\n        {\r\n            this.setState({\r\n                mimetype: '.' + file.type.split('/')[1],\r\n                weight: (file.size/1024/1024).toFixed(2) + \" МБ\",\r\n                preview: URL.createObjectURL(file)\r\n            });\r\n            var reader = new FileReader();\r\n            reader.readAsBinaryString(file);\r\n            \r\n                    reader.onload = function(e) {\r\n                        let bits = e.target.result;\r\n                        var img = new Image();\r\n                        img.src = 'data:image/'+ this.state.mimetype.split('.').pop()+';base64,' + btoa(bits);\r\n                        img.onload = () => {\r\n                            \r\n                        var size = img.height + \"х\" + img.width + \" px\";\r\n                            this.setState({\r\n                                image: 'data:image/'+ this.state.mimetype.split('.').pop()+';base64,' + btoa(bits),\r\n                                size: size\r\n                            });\r\n                        }\r\n                        \r\n                    }.bind(this);\r\n    \r\n        }\r\n        else \r\n        {\r\n            alert(\"Неправильный тип файла! Загрузите изображение!\");\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div class = \"container\">\r\n            <div class = \"header\"> \r\n                <h1>Редактирование картинки</h1>\r\n\r\n            </div>\r\n            <div class = \"imgcontent\">\r\n            <img src = {'data:image/jpeg;base64,' + btoa(this.state.image)} id=\"preview\"/><br/>\r\n            <input type=\"file\" name=\"image\" onChange={this.handleImageChange}/><br/>\r\n            <input class = \"input_1\" id=\"name\" class=\"input_1\" name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} required/><br/>\r\n            <textarea class = \"textarea_1\" name=\"description\" type=\"text\" value={this.state.description} onChange={this.handleChange}></textarea>\r\n            <input class = \"input_1\" name=\"tags\" type=\"text\" value={this.state.tags} onChange={this.handleChange} required/><br/>\r\n            <label>Формат</label>\r\n            <select class = \"select\" name=\"format\" value = {this.state.format} onChange={this.handleChange} onLoad={this.handleChange}><br/>\r\n                <option value=\"Альбом\">Альбом</option>\r\n                <option value=\"Портрет\">Портрет</option>\r\n                <option value=\"Квадрат\">Квадрат</option>\r\n            </select><br/>\r\n            <label>Коллекция</label>\r\n            <select class = \"select\" name=\"collection\" onChange={this.handleChange}>\r\n                <option value=\"Другое\">Другое</option>\r\n                {\r\n                    this.state.colList.map((item) => {\r\n                        return(\r\n                            <option value={item.colName}>{item.colName}</option>\r\n                        );\r\n                    })\r\n                }\r\n            </select><br/>\r\n            <button type=\"button\" class=\"button\" onClick={this.handleAdd}>Изменить</button>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditImg;"]},"metadata":{},"sourceType":"module"}