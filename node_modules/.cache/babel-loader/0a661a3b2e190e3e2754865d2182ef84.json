{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\internship\\\\new\\\\gallery\\\\src\\\\CollectionItemPg.js\";\nimport React from 'react';\nimport './css/CollectionsPage.css';\nimport './css/common.css';\nimport IndexedDbRepository from './IndexedRepository';\nimport { Link, withRouter } from 'react-router-dom';\nimport { saveAs } from 'file-saver';\nimport Menu from './Menu';\n\nclass CollectionItemPg extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = async idToDelete => {\n      var colImg = await this.repository.searchByField('photos', 'collections', idToDelete);\n\n      if (window.confirm('Удалить данную коллекцию?')) {\n        if (window.confirm('Удалить также и изображения коллекции?')) {\n          for (const element of colImg) {\n            await this.repository.deleteById('photos', element.id);\n          }\n        } else {\n          for (const element of colImg) {\n            element.collection = null;\n            await this.repository.save('photos', element);\n          }\n        }\n\n        this.repository.deleteById('collections', idToDelete).then(window.location = '/');\n      }\n    };\n\n    this.state = {\n      images: []\n    }; // this.search = this.search.bind(this);\n\n    this.saveCollection = this.saveCollection.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"Страница коллекции\";\n    this.repository = new IndexedDbRepository(\"id\");\n    this.repository.searchByField('photos', 'collections', this.props.match.params.colName).then(images => this.setState({\n      images\n    }));\n  }\n\n  async saveCollection() {\n    var JSZip = require(\"jszip\");\n\n    var zip = new JSZip();\n    var img = zip.folder(\"images\");\n\n    for (const image of this.state.images) {\n      var imgData = btoa(image.image);\n      var imgName = image.name + image.mimetype;\n      img.file(imgName, imgData, {\n        base64: true\n      });\n    }\n\n    var archiveName = this.props.match.params.colName + '.zip';\n    zip.generateAsync({\n      type: \"blob\"\n    }).then(function (base64) {\n      saveAs(base64, archiveName);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Коллекция \" + this.props.match.params.colName)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"photo-wall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"photosUl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, this.state.images.map(imgcontent => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: /imgpage/ + imgcontent.id,\n        class: \"btnlink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"photoDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        class: \"photoImg\",\n        src: 'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      })))));\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button\",\n      type: \"button\",\n      onClick: async () => {\n        await this.saveCollection();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u044E\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button\",\n      type: \"button\",\n      onClick: async () => {\n        await this.handleDelete(this.props.match.params.colName);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u0443\\u044E \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u044E\")));\n  }\n\n}\n\nexport default CollectionItemPg;","map":{"version":3,"sources":["C:/Users/User/Desktop/internship/new/gallery/src/CollectionItemPg.js"],"names":["React","IndexedDbRepository","Link","withRouter","saveAs","Menu","CollectionItemPg","Component","constructor","props","handleDelete","idToDelete","colImg","repository","searchByField","window","confirm","element","deleteById","id","collection","save","then","location","state","images","saveCollection","bind","componentDidMount","document","title","match","params","colName","setState","JSZip","require","zip","img","folder","image","imgData","btoa","imgName","name","mimetype","file","base64","archiveName","generateAsync","type","render","map","imgcontent","split","pop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/CollectionsPage.css';\r\nimport './css/common.css';\r\nimport IndexedDbRepository from './IndexedRepository';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { saveAs } from 'file-saver';\r\nimport Menu from './Menu';\r\n\r\nclass CollectionItemPg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: []\r\n        }\r\n\r\n       // this.search = this.search.bind(this);\r\n        this.saveCollection = this.saveCollection.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Страница коллекции\";\r\n        this.repository = new IndexedDbRepository(\"id\");\r\n        this.repository.searchByField('photos', 'collections', this.props.match.params.colName).then( images => this.setState( { images } ) );\r\n        \r\n    }\r\n\r\n    handleDelete = async( idToDelete ) => {\r\n        var colImg = await this.repository.searchByField('photos', 'collections', idToDelete);\r\n        if(window.confirm('Удалить данную коллекцию?'))\r\n        {\r\n            if(window.confirm('Удалить также и изображения коллекции?'))\r\n            {\r\n                for (const element of colImg) {\r\n                    await this.repository.deleteById( 'photos', element.id );\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for (const element of colImg) {\r\n                    element.collection = null;\r\n                    await this.repository.save( 'photos', element);\r\n                }\r\n            }\r\n            this.repository.deleteById( 'collections', idToDelete ).then(window.location = ('/'));\r\n        }\r\n        \r\n    }\r\n\r\n    async saveCollection() {\r\n        var JSZip = require(\"jszip\");\r\n        var zip = new JSZip();\r\n        var img = zip.folder(\"images\");\r\n        for(const image of this.state.images) {\r\n            var imgData = btoa(image.image);\r\n            var imgName = image.name + image.mimetype;\r\n            img.file( imgName, imgData, {base64: true});\r\n        }\r\n        var archiveName = this.props.match.params.colName + '.zip';\r\n        zip.generateAsync({type:\"blob\"})\r\n        .then(function(base64) {\r\n            saveAs(base64, archiveName);\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div class = \"header\"> \r\n                    <Menu />\r\n                    <h1>{\"Коллекция \" + this.props.match.params.colName}</h1>\r\n\r\n                </div>\r\n                <div id=\"photo-wall\">\r\n                    <ul class = \"photosUl\">\r\n                        {this.state.images.map((imgcontent) => {\r\n                    return (\r\n                        <li>\r\n                        <div class=\"post\">\r\n                        <Link to={/imgpage/+ imgcontent.id} class=\"btnlink\" >\r\n                                <div class = \"photoDiv\">\r\n                                    <img class = \"photoImg\" src = {'data:image/' + imgcontent.mimetype.split('.').pop() + ';base64,' + btoa(imgcontent.image)}/>\r\n                                </div>        \r\n                            </Link>\r\n                        </div>\r\n                        </li>\r\n                    )\r\n                    })}     \r\n                    </ul>\r\n                    <button class = \"button\" type = \"button\" onClick = {async () => {await this.saveCollection()}}>Сохранить коллекцию</button>\r\n                    <button class = \"button\" type = \"button\" onClick = {async () => {await this.handleDelete(this.props.match.params.colName)}}>Удалить данную коллекцию</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollectionItemPg;"]},"metadata":{},"sourceType":"module"}